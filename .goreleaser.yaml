project_name: athenaeum
before:
  hooks:
    - go mod tidy
builds:
  - main: ./cmd/athenaeum
    goos:
      - linux
      - windows
      - darwin
    goarch:
      - amd64
      - arm64
    ldflags:
      - -s -w -X main.Version={{.Version}} -X main.Commit={{.Commit}} -X main.Date={{.Date}}
dockers:
  - use: buildx
    goos: linux
    goarch: amd64
    dockerfile: Dockerfile
    image_templates:
      - "ghcr.io/callumkerson/{{ .ProjectName }}:{{ .Version }}-amd64"
      - "ghcr.io/callumkerson/{{ .ProjectName }}:{{ .Major }}-amd64"
      - "ghcr.io/callumkerson/{{ .ProjectName }}:{{ .Major }}.{{ .Minor }}-amd64"
      - "ghcr.io/callumkerson/{{ .ProjectName }}:latest-amd64"
    build_flag_templates:
      - "--platform=linux/amd64"
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.title={{.ProjectName}}"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version={{.Version}}"
  - use: buildx
    goos: linux
    goarch: arm64
    dockerfile: Dockerfile
    image_templates:
      - "ghcr.io/callumkerson/{{ .ProjectName }}:{{ .Version }}-arm64"
      - "ghcr.io/callumkerson/{{ .ProjectName }}:{{ .Major }}-arm64"
      - "ghcr.io/callumkerson/{{ .ProjectName }}:{{ .Major }}.{{ .Minor }}-arm64"
      - "ghcr.io/callumkerson/{{ .ProjectName }}:latest-arm64"
    build_flag_templates:
      - "--platform=linux/arm64"
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.title={{.ProjectName}}"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version={{.Version}}"
docker_manifests:
  - name_template: "ghcr.io/callumkerson/{{ .ProjectName }}:{{ .Version }}"
    image_templates:
      - "ghcr.io/callumkerson/{{ .ProjectName }}:{{ .Version }}-amd64"
      - "ghcr.io/callumkerson/{{ .ProjectName }}:{{ .Version }}-arm64"
  - name_template: "ghcr.io/callumkerson/{{ .ProjectName }}:{{ .Major }}"
    image_templates:
      - "ghcr.io/callumkerson/{{ .ProjectName }}:{{ .Major }}-amd64"
      - "ghcr.io/callumkerson/{{ .ProjectName }}:{{ .Major }}-arm64"
  - name_template: "ghcr.io/callumkerson/{{ .ProjectName }}:{{ .Major }}.{{ .Minor }}"
    image_templates:
      - "ghcr.io/callumkerson/{{ .ProjectName }}:{{ .Major }}.{{ .Minor }}-amd64"
      - "ghcr.io/callumkerson/{{ .ProjectName }}:{{ .Major }}.{{ .Minor }}-arm64"
  - name_template: "ghcr.io/callumkerson/{{ .ProjectName }}:latest"
    image_templates:
      - "ghcr.io/callumkerson/{{ .ProjectName }}:latest-amd64"
      - "ghcr.io/callumkerson/{{ .ProjectName }}:latest-arm64"
changelog:
  use: github-native
brews:
  - tap:
      owner: CallumKerson
      name: homebrew-tap
      branch: main
      token: "{{ .Env.TAP_GITHUB_TOKEN }}"
    homepage: "https://github.com/CallumKerson/Athenaeum"
    license: "MIT"
    test: |
      system "#{bin}/athenaeum --version"
    service: |
      run [opt_bin/"athenaeum", "run" ,"--config", opt_prefix/"config.yaml"]
      keep_alive true
    caveats: |
      ****************************************************************
      The configuration file that is run by the service is located at #{prefix}/config.yaml.
      ****************************************************************
      ****************************************************************
      Below are services commands to run to manage the athenaeum service.
      If you wish to run the athenaeum at boot prefix these commands with sudo
      otherwise the service will run at login.
      To start the athenaeum service run:
        brew services start CallumKerson/homebrew-tap/athenaeum
      To stop the athenaeum service run:
        brew services stop CallumKerson/homebrew-tap/athenaeum
      To restart the athenaeum service run:
        brew services restart CallumKerson/homebrew-tap/athenaeum
      ****************************************************************
